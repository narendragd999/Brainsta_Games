// Full game logic (match-3) - simplified compressed version for packaging (functional)
const canvas=document.getElementById('board'),ctx=canvas.getContext('2d');
const scoreEl=document.getElementById('score'),movesEl=document.getElementById('moves');
const sizeSelect=document.getElementById('size-select'),themeSelect=document.getElementById('theme-select');
const shuffleBtn=document.getElementById('shuffle'),restartBtn=document.getElementById('restart');
let cols=parseInt(sizeSelect.value),rows=cols,tileSize=64,grid=[],selected=null,anims=[],score=0,allowInput=true,theme='vibrant';
const AudioContext=window.AudioContext||window.webkitAudioContext;let audioCtx=null;
function ensureAudio(){if(!audioCtx)audioCtx=new AudioContext()}
function popSound(volume=0.06,pitch=800){try{ensureAudio();const now=audioCtx.currentTime;const o=audioCtx.createOscillator();const g=audioCtx.createGain();o.type='sine';o.frequency.setValueAtTime(pitch,now);g.gain.setValueAtTime(volume,now);g.gain.exponentialRampToValueAtTime(0.001,now+0.22);o.connect(g);g.connect(audioCtx.destination);o.start(now);o.stop(now+0.23);const bufferSize=audioCtx.sampleRate*0.03;const buffer=audioCtx.createBuffer(1,bufferSize,audioCtx.sampleRate);const data=buffer.getChannelData(0);for(let i=0;i<bufferSize;i++)data[i]=(Math.random()*2-1)*Math.exp(-i/bufferSize*4);const noise=audioCtx.createBufferSource();const ng=audioCtx.createGain();noise.buffer=buffer;ng.gain.setValueAtTime(volume*0.6,now);ng.gain.exponentialRampToValueAtTime(0.001,now+0.12);noise.connect(ng);ng.connect(audioCtx.destination);noise.start(now);noise.stop(now+0.12);}catch(e){}}
function fitCanvas(){const maxWidth=Math.min(window.innerWidth-32,720);const size=maxWidth;canvas.width=size;canvas.height=size;tileSize=Math.floor(size/cols);draw();}
window.addEventListener('resize',fitCanvas);
function randInt(n){return Math.floor(Math.random()*n)}
const COLORS={vibrant:['#ff6b6b','#ffb86b','#ffd86b','#6bd8ff','#7bffb8','#b98bff'],pastel:['#ffccd5','#ffd8b8','#fff1b8','#c9f1ff','#dff7e6','#e6dbff'],neon:['#ff3d81','#ff8a00','#ffd900','#00e0ff','#00ff88','#b400ff']};
function init(){cols=parseInt(sizeSelect.value);rows=cols;theme=themeSelect.value;score=0;updateHUD();grid=new Array(rows*cols).fill(0).map(_=>randInt(6));while(findMatches().length){grid=new Array(rows*cols).fill(0).map(_=>randInt(6))}selected=null;anims=[];allowInput=true;document.getElementById('overlay').classList.add('hidden');fitCanvas();draw();}
function draw(){ctx.clearRect(0,0,canvas.width,canvas.height);ctx.fillStyle='#061226';ctx.fillRect(0,0,canvas.width,canvas.height);const colsColors=COLORS[theme];for(let r=0;r<rows;r++){for(let c=0;c<cols;c++){const i=r*cols+c;const val=grid[i];const x=c*tileSize,y=r*tileSize;drawRoundedRect(x+6,y+6,tileSize-12,tileSize-12,10);ctx.save();ctx.clip();const col=colsColors[val%colsColors.length];const g=ctx.createLinearGradient(x,y,x+tileSize,y+tileSize);g.addColorStop(0,shadeColor(col,12));g.addColorStop(1,shadeColor(col,-8));ctx.fillStyle=g;ctx.fillRect(x+6,y+6,tileSize-12,tileSize-12);ctx.restore();ctx.fillStyle='rgba(255,255,255,0.06)';ctx.fillRect(x+6,y+6,tileSize-12,Math.floor(tileSize*0.36));ctx.fillStyle='rgba(0,0,0,0.18)';ctx.font=Math.floor(tileSize*0.28)+'px system-ui';ctx.textAlign='center';ctx.textBaseline='middle';ctx.fillText((val+1).toString(),x+tileSize/2,y+tileSize/2);if(selected===i){ctx.strokeStyle='rgba(255,255,255,0.9)';ctx.lineWidth=3;roundRectStroke(x+6,y+6,tileSize-12,tileSize-12,10)}}}for(const a of anims)a.draw();}
function drawRoundedRect(x,y,w,h,r){ctx.beginPath();ctx.moveTo(x+r,y);ctx.arcTo(x+w,y,x+w,y+h,r);ctx.arcTo(x+w,y+h,x,y+h,r);ctx.arcTo(x,y+h,x,y,r);ctx.arcTo(x,y,x+w,y,r);ctx.closePath();ctx.fill()}
function roundRectStroke(x,y,w,h,r){ctx.beginPath();ctx.moveTo(x+r,y);ctx.arcTo(x+w,y,x+w,y+h,r);ctx.arcTo(x+w,y+h,x,y+h,r);ctx.arcTo(x,y+h,x,y,r);ctx.arcTo(x,y,x+w,y,r);ctx.closePath();ctx.stroke()}
function shadeColor(hex,percent){const num=parseInt(hex.slice(1),16);const r=Math.min(255,Math.max(0,(num>>16)+Math.round(255*percent/100)));const g=Math.min(255,Math.max(0,((num>>8)&0x00FF)+Math.round(255*percent/100)));const b=Math.min(255,Math.max(0,(num&0x0000FF)+Math.round(255*percent/100)));return'#'+((1<<24)+(r<<16)+(g<<8)+b).toString(16).slice(1)}
canvas.addEventListener('pointerdown',(e)=>{if(!allowInput)return;const rect=canvas.getBoundingClientRect();const x=e.clientX-rect.left;const y=e.clientY-rect.top;const c=Math.floor(x/tileSize);const r=Math.floor(y/tileSize);if(c<0||r<0||c>=cols||r>=rows)return;const idx=r*cols+c;if(selected===null){selected=idx;draw()}else if(selected===idx){selected=null;draw()}else{const sr=Math.floor(selected/cols),sc=selected%cols;const dist=Math.abs(sr-r)+Math.abs(sc-c);if(dist===1){swapAndResolve(selected,idx)}else{selected=idx;draw()}}});
function swapAndResolve(i,j){allowInput=false;animateSwap(i,j,()=>{[grid[i],grid[j]]=[grid[j],grid[i]];const matches=findMatches();if(matches.length===0){setTimeout(()=>{animateSwap(i,j,()=>{[grid[i],grid[j]]=[grid[j],grid[i]];selected=null;allowInput=true;draw()});},160);}else{processMatches(()=>{selected=null;allowInput=true;draw()});}})}
function animateSwap(i,j,cb){const ir=Math.floor(i/cols),ic=i%cols,jr=Math.floor(j/cols),jc=j%cols;const sx=ic*tileSize,sy=ir*tileSize,dx=jc*tileSize,dy=jr*tileSize;const valI=grid[i],valJ=grid[j];const duration=180;const start=performance.now();function step(t){const p=Math.min(1,(t-start)/duration);draw();ctx.save();drawMovingTile(valI,sx+(dx-sx)*p,sy+(dy-sy)*p);drawMovingTile(valJ,dx+(sx-dx)*p,dy+(sy-dy)*p);ctx.restore();if(p<1)requestAnimationFrame(step);else cb()}requestAnimationFrame(step)}
function drawMovingTile(val,x,y){ctx.save();roundRectStroke(x+6,y+6,tileSize-12,tileSize-12,10);ctx.clip();const colsColors=COLORS[theme];const col=colsColors[val%colsColors.length];const g=ctx.createLinearGradient(x,y,x+tileSize,y+tileSize);g.addColorStop(0,shadeColor(col,12));g.addColorStop(1,shadeColor(col,-8));ctx.fillStyle=g;ctx.fillRect(x+6,y+6,tileSize-12,tileSize-12);ctx.fillStyle='rgba(255,255,255,0.06)';ctx.fillRect(x+6,y+6,tileSize-12,Math.floor(tileSize*0.36));ctx.fillStyle='rgba(0,0,0,0.18)';ctx.font=Math.floor(tileSize*0.28)+'px system-ui';ctx.textAlign='center';ctx.textBaseline='middle';ctx.fillText((val+1).toString(),x+tileSize/2,y+tileSize/2);ctx.restore()}
function findMatches(){const matches=[];for(let r=0;r<rows;r++){let runVal=-1,runStart=0;for(let c=0;c<cols;c++){const i=r*cols+c;if(grid[i]===runVal){}else{if(c-runStart>=3&&runVal!==-1){const group=[];for(let k=runStart;k<c;k++)group.push(r*cols+k);matches.push(group)}runVal=grid[i];runStart=c;}}if(cols-runStart>=3){const group=[];for(let k=runStart;k<cols;k++)group.push(r*cols+k);matches.push(group)}}for(let c=0;c<cols;c++){let runVal=-1,runStart=0;for(let r=0;r<rows;r++){const i=r*cols+c;if(grid[i]===runVal){}else{if(r-runStart>=3&&runVal!==-1){const group=[];for(let k=runStart;k<r;k++)group.push(k*cols+c);matches.push(group)}runVal=grid[i];runStart=r;}}if(rows-runStart>=3){const group=[];for(let k=runStart;k<rows;k++)group.push(k*cols+c);matches.push(group)}}if(matches.length===0)return[];const mark=new Array(rows*cols).fill(false);const merged=[];for(const g of matches){let anyNew=false;for(const idx of g){if(!mark[idx])anyNew=true;mark[idx]=true;}if(anyNew)merged.push(g);}const finalGroups=[];const visited=new Array(rows*cols).fill(false);for(let i=0;i<rows*cols;i++){if(!mark[i]||visited[i])continue;const comp=[];const q=[i];visited[i]=true;while(q.length){const cur=q.shift();comp.push(cur);const r=Math.floor(cur/cols),c=cur%cols;const dirs=[[1,0],[-1,0],[0,1],[0,-1]];for(const d of dirs){const nr=r+d[0],nc=c+d[1];if(nr<0||nr>=rows||nc<0||nc>=cols)continue;const ni=nr*cols+nc;if(!visited[ni]&&mark[ni]){visited[ni]=true;q.push(ni);}}}finalGroups.push(comp);}return finalGroups}
function processMatches(done){const groups=findMatches();if(groups.length===0){done();return;}let totalPopped=0;for(const g of groups){totalPopped+=g.length;for(const idx of g){spawnParticlesAtIndex(idx);grid[idx]=null;}score+=10*g.length*(g.length-2);popSound(0.06,700+g.length*40)}updateHUD();setTimeout(()=>{applyGravity();refillGrid();setTimeout(()=>processMatches(done),160);},160)}
function spawnParticlesAtIndex(idx){const r=Math.floor(idx/cols),c=idx%cols;const x=c*tileSize+tileSize/2;const y=r*tileSize+tileSize/2;const count=14;for(let i=0;i<count;i++){const angle=Math.random()*Math.PI*2;const speed=1+Math.random()*2.6;const vx=Math.cos(angle)*speed;const vy=Math.sin(angle)*speed;const life=500+Math.random()*400;const color=COLORS[theme][Math.floor(Math.random()*COLORS[theme].length)];anims.push(new Particle(x,y,vx,vy,life,color));}setTimeout(()=>{anims=anims.filter(a=>!a.dead);},1200)}
class Particle{constructor(x,y,vx,vy,life,color){this.x=x;this.y=y;this.vx=vx;this.vy=vy;this.life=life;this.max=life;this.color=color;this.dead=false;}draw(){const dt=16/1000;this.x+=this.vx*24*dt;this.y+=this.vy*24*dt;this.life-=16;const alpha=Math.max(0,this.life/this.max);ctx.fillStyle=this.color;ctx.globalAlpha=alpha;ctx.beginPath();ctx.arc(this.x,this.y,Math.max(1,6*alpha),0,Math.PI*2);ctx.fill();ctx.globalAlpha=1;if(this.life<=0)this.dead=true;}}
function applyGravity(){for(let c=0;c<cols;c++){let write=rows-1;for(let r=rows-1;r>=0;r--){const idx=r*cols+c;if(grid[idx]!==null){grid[write*cols+c]=grid[idx];if(write!==r)grid[idx]=null;write--}}for(let r=write;r>=0;r--)grid[r*cols+c]=null}}
function refillGrid(){for(let i=0;i<rows*cols;i++){if(grid[i]===null||grid[i]===undefined)grid[i]=randInt(6)}draw()}
function animLoop(){anims=anims.filter(a=>!a.dead);if(anims.length)draw();requestAnimationFrame(animLoop)}requestAnimationFrame(animLoop);
function randInt(n){return Math.floor(Math.random()*n)}function updateHUD(){scoreEl.textContent='Score: '+score;movesEl.textContent='Moves: âˆž'}
shuffleBtn.addEventListener('click',()=>{grid=new Array(rows*cols).fill(0).map(_=>randInt(6));while(findMatches().length)grid=new Array(rows*cols).fill(0).map(_=>randInt(6));draw()})
restartBtn.addEventListener('click',()=>init());sizeSelect.addEventListener('change',()=>init());themeSelect.addEventListener('change',(e)=>{theme=e.target.value;draw()})
document.getElementById('overlay-play')&&document.getElementById('overlay-play').addEventListener('click',()=>{init()})
init()
window.addEventListener('pointerdown',()=>{try{ensureAudio();if(audioCtx&&audioCtx.state==='suspended')audioCtx.resume()}catch(e){}},{once:true})
