(() => {
  const canvas=document.getElementById('game'), ctx=canvas.getContext('2d');
  const DPR=Math.min(window.devicePixelRatio||1,2);
  let W=1280,H=720;
  const AS='assets/';
  const bg=new Image(); bg.src=AS+'background.png';
  const monkeyImg=new Image(); monkeyImg.src=AS+'monkey_open.png';
  const handleImg=new Image(); handleImg.src=AS+'handle.png';
  const coinImg=new Image(); coinImg.src=AS+'coin_face.png';
  const sCut=new Audio(AS+'cut.wav'), sEat=new Audio(AS+'eat.wav'), sMiss=new Audio(AS+'miss.wav');
  let running=false, level=1, lastTime=0, status='';
  const MAX_LEVEL=10;
  let ropes=[]; let selectedIndex=0;
  let coin={x:0,y:0,vx:0,vy:0,attached:true,ropeIndex:0,angle:0};
  let monkey={x:0,y:0,w:220,h:180,mouthX:0,mouthY:0,mouthW:90,mouthH:50};
  const GRAV=1400;
  function resize(){ const w=Math.max(window.innerWidth,360), h=Math.max(window.innerHeight,360); canvas.style.width=w+'px'; canvas.style.height=h+'px'; canvas.width=Math.round(w*DPR); canvas.height=Math.round(h*DPR); W=canvas.width; H=canvas.height; monkey.x=W/2; monkey.y=H-140; monkey.mouthX=monkey.x; monkey.mouthY=monkey.y-30; }
  window.addEventListener('resize',resize);
  function createLevel(n){ ropes=[]; const count=5; const gap=Math.max(220, 300 + (n-1)*10); let startX=W*0.22; for(let i=0;i<count;i++){ const x=startX + i*gap + (Math.random()*40-20); const y=Math.max(140, Math.min(H*0.45 + (Math.random()*60-30), H*0.45)); ropes.push({x,y,length: 180 + Math.random()*120, active:true, coinOffset: Math.random()*0.6 + 0.2}); } selectedIndex=Math.floor(ropes.length/2); coin.attached=true; coin.ropeIndex=0; coin.angle=0; coin.vx=0; coin.vy=0; }
  function drawScene(){ ctx.setTransform(1,0,0,1,0,0); ctx.clearRect(0,0,canvas.width,canvas.height); if(bg.complete){ const ratio=Math.max(canvas.width/bg.width, canvas.height/bg.height); const iw=bg.width*ratio, ih=bg.height*ratio; ctx.drawImage(bg,(canvas.width-iw)/2,(canvas.height-ih)/2,iw,ih);} for(let i=0;i<ropes.length;i++){ const r=ropes[i]; const endX=r.x, endY=r.y + r.length; ctx.lineWidth=4; ctx.strokeStyle=r.active? '#6b4a2c':'rgba(120,80,60,0.18)'; ctx.beginPath(); ctx.moveTo(r.x,r.y); ctx.lineTo(endX,endY); ctx.stroke(); if(handleImg.complete) ctx.drawImage(handleImg, r.x-18, r.y-18, 36,36); if(i===selectedIndex){ ctx.beginPath(); ctx.arc(r.x, r.y-8, 32,0,Math.PI*2); ctx.strokeStyle='rgba(255,240,120,0.8)'; ctx.lineWidth=3; ctx.stroke(); } if(coin.attached && coin.ropeIndex===i){ const cx=r.x + Math.sin(coin.angle)*20; const cy=r.y + r.length * r.coinOffset + Math.cos(coin.angle)*12; if(coinImg.complete) ctx.drawImage(coinImg, cx-24, cy-24, 48,48); } } if(monkeyImg.complete) ctx.drawImage(monkeyImg, monkey.x-200, monkey.y-140, 400,300); if(!coin.attached){ if(coinImg.complete) ctx.drawImage(coinImg, coin.x-24, coin.y-24, 48,48); } document.getElementById('level-val').textContent=level + '/' + MAX_LEVEL; document.getElementById('status').textContent=status; }
  function update(dt){ if(coin.attached){ const r=ropes[coin.ropeIndex]; coin.angle += dt*2.4; } else { coin.vy += GRAV * dt; coin.x += coin.vx * dt; coin.y += coin.vy * dt; const mx=monkey.mouthX, my=monkey.mouthY; if(coin.y > my - 20 && Math.abs(coin.x - mx) < 80 && coin.y < my + 40){ try{sEat.currentTime=0; sEat.play().catch(()=>{});}catch(e){}; status = 'YUM! You fed the monkey!'; setTimeout(()=>{ nextLevel(true); },700); } else if(coin.y > H + 80){ try{sMiss.currentTime=0; sMiss.play().catch(()=>{});}catch(e){}; status='Oops â€” missed! Try again.'; setTimeout(()=>{ nextLevel(false); },700); } } }
  function cutRope(index){ if(!ropes[index]||!ropes[index].active) return; ropes[index].active=false; if(coin.attached && coin.ropeIndex===index){ coin.attached=false; const r=ropes[index]; coin.x = r.x + Math.sin(coin.angle)*20; coin.y = r.y + r.length * r.coinOffset + Math.cos(coin.angle)*12; coin.vx = Math.sin(coin.angle)*120 + (Math.random()-0.5)*40; coin.vy = Math.cos(coin.angle)*40 - 20; } try{sCut.currentTime=0; sCut.play().catch(()=>{});}catch(e){}; }
  let pdown=null; canvas.addEventListener('pointerdown',(e)=>{ pdown={x:e.clientX,y:e.clientY,t:Date.now()}; }); canvas.addEventListener('pointerup',(e)=>{ if(!pdown) return; const dx=e.clientX-pdown.x, dy=e.clientY-pdown.y; if(Math.abs(dx)>30 && Math.abs(dx)>Math.abs(dy)){ if(dx<0) selectedIndex = Math.max(0, selectedIndex-1); else selectedIndex = Math.min(ropes.length-1, selectedIndex+1); cutRope(selectedIndex); } pdown=null; });
  document.getElementById('left').addEventListener('click', ()=>{ selectedIndex=Math.max(0,selectedIndex-1); cutRope(selectedIndex); }); document.getElementById('right').addEventListener('click', ()=>{ selectedIndex=Math.min(ropes.length-1,selectedIndex+1); cutRope(selectedIndex); });
  function nextLevel(won){ if(won){ level++; if(level>MAX_LEVEL){ status='You completed all levels! Great!'; running=false; document.getElementById('overlay').style.display='flex'; document.getElementById('overlay-inner').querySelector('h1').textContent='YOU WIN!'; return; } } createLevel(level); status=''; }
  document.getElementById('start').addEventListener('click', ()=>{ document.getElementById('overlay').style.display='none'; level=1; createLevel(level); running=true; status=''; lastTime=0; });
  function createLevel(n){ ropes=[]; const count=5; const gap=Math.max(220, 300 + (n-1)*10); let startX=W*0.22; for(let i=0;i<count;i++){ const x=startX + i*gap + (Math.random()*40-20); const y=Math.max(140, Math.min(H*0.45 + (Math.random()*60-30), H*0.45)); ropes.push({x,y,length: 180 + Math.random()*120, active:true, coinOffset: Math.random()*0.6 + 0.2}); } selectedIndex=Math.floor(ropes.length/2); coin.attached=true; coin.ropeIndex=0; coin.angle=0; coin.vx=0; coin.vy=0; }
  function loop(ts){ if(!lastTime) lastTime=ts; const dt=Math.min(0.033,(ts-lastTime)/1000); lastTime=ts; if(running) update(dt); drawScene(); requestAnimationFrame(loop); } resize(); requestAnimationFrame(loop);